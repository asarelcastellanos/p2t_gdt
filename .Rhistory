library(here)
library(tidyverse)
here()
library(here)
library(tidyverse)
here()
fall_2016 <- read_csv("./data/fall_2016.csv")
fall_2017 <- read_csv("./data/fall_2017.csv")
fall_2018 <- read_csv("./data/fall_2018.csv")
#fall_2019 <- read_csv("./data/fall_2019.csv")
fall_2020 <- read_csv("./data/fall_2020.csv")
fall_2021 <- read_csv("./data/fall_2021.csv")
fall_2022 <- read_csv("./data/fall_2022.csv")
fall_2023 <- read_csv("./data/fall_2023.csv")
View(fall_2016)
View(fall_2017)
yrs <- 2016:2023
existing_years <- yrs[sapply(paste0("fall_", yrs), exists)]
all_courses <- map_dfr(
existing_years,
function(yr) {
nm <- paste0("fall_", yr)
df <- get(nm)
# extract and normalize columns
out <- tibble(
Department = pick_department(df),
Subject    = df$Subject,
Course     = df$Course,
Section    = df$Section,
Instructor = df$Instructor,
A = df$A, B = df$B, C = df$C, D = df$D, F = df$F
) |>
# coerce grades to numeric (handles character inputs too)
mutate(across(c(A, B, C, D, F), ~ suppressWarnings(as.numeric(.x)))) |>
mutate(
Total = rowSums(across(c(A, B, C, D, F)), na.rm = TRUE),
semester = "Fall",
year = yr,
academic_year = paste(semester, year)
)
out
}
) |>
# arrange columns in the exact order requested
select(Department, Subject, Course, Section, Instructor,
A, B, C, D, F, Total, semester, year, academic_year)
yrs <- 2016:2023
existing_years <- yrs[sapply(paste0("fall_", yrs), exists)]
all_courses <- map_dfr(
existing_years,
function(yr) {
nm <- paste0("fall_", yr)
df <- get(nm)
# extract and normalize columns
out <- tibble(
Department = df$Department,
Subject    = df$Subject,
Course     = df$Course,
Section    = df$Section,
Instructor = df$Instructor,
A = df$A, B = df$B, C = df$C, D = df$D, F = df$F
) |>
# coerce grades to numeric (handles character inputs too)
mutate(across(c(A, B, C, D, F), ~ suppressWarnings(as.numeric(.x)))) |>
mutate(
Total = rowSums(across(c(A, B, C, D, F)), na.rm = TRUE),
semester = "Fall",
year = yr,
academic_year = paste(semester, year)
)
out
}
) |>
# arrange columns in the exact order requested
select(Department, Subject, Course, Section, Instructor,
A, B, C, D, F, Total, semester, year, academic_year)
View(all_courses)
View(fall_2016)
View(fall_2017)
View(fall_2018)
View(fall_2020)
View(fall_2021)
View(fall_2022)
View(fall_2023)
a_summary <- all_courses %>%
group_by(year) %>%
summarise(
total_A = sum(A, na.rm = TRUE),
total_grades = sum(Total, na.rm = TRUE),
prop_A = total_A / total_grades
)
ggplot(all_courses %>%
group_by(year, Instructor) %>%
summarise(prop_A = sum(A, na.rm=TRUE) / sum(Total, na.rm=TRUE)),
aes(x = factor(year), y = prop_A, fill = Instructor)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Proportion of A Grades by Year and Instructor",
x = "Year", y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14)
ggplot(a_summary, aes(x = factor(year), y = prop_A)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = scales::percent(prop_A, accuracy = 0.1)),
vjust = -0.5, size = 3.5) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Proportion of A Grades by Year",
x = "Year",
y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14)
dept_summary <- all_courses %>%
group_by(Department) %>%
summarise(
total_A = sum(A, na.rm = TRUE),
total_grades = sum(Total, na.rm = TRUE),
prop_A = total_A / total_grades
) %>%
arrange(desc(prop_A))
ggplot(dept_summary, aes(x = reorder(Department, prop_A), y = prop_A)) +
geom_col(fill = "seagreen3") +
geom_text(aes(label = scales::percent(prop_A, accuracy = 0.1)),
hjust = -0.1, size = 3.5) +
scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
coord_flip() +
labs(
title = "Proportion of A Grades by Department (All Years)",
x = "Department",
y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14)
ggplot(all_courses %>%
group_by(Department, year) %>%
summarise(prop_A = sum(A, na.rm=TRUE) / sum(Total, na.rm=TRUE)),
aes(x = factor(year), y = prop_A, fill = Department)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Proportion of A Grades by Department and Year",
x = "Year", y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14)
ggplot(a_summary, aes(x = factor(year), y = prop_A)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = scales::percent(prop_A, accuracy = 0.1)),
vjust = -0.5, size = 3.5) +
scale_y_continuous(
labels = scales::percent,
limits = c(0, max(a_summary$prop_A) * 1.15)  # add 15% headroom
) +
labs(
title = "Proportion of A Grades by Year",
x = "Year",
y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14)
subject_summary <- all_courses %>%
group_by(Subject) %>%
summarise(
total_A = sum(A, na.rm = TRUE),
total_grades = sum(Total, na.rm = TRUE),
prop_A = total_A / total_grades
) %>%
arrange(desc(prop_A))
ggplot(subject_summary, aes(x = reorder(Subject, prop_A), y = prop_A)) +
geom_col(fill = "cornflowerblue") +
geom_text(aes(label = scales::percent(prop_A, accuracy = 0.1)),
hjust = -0.1, size = 3.5) +
scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
coord_flip() +
labs(
title = "Proportion of A Grades by Subject (All Years)",
x = "Subject",
y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14) +
theme(plot.margin = margin(t = 20, r = 10, b = 10, l = 10))
ggplot(all_courses %>%
group_by(year, Subject) %>%
summarise(prop_A = sum(A, na.rm=TRUE) / sum(Total, na.rm=TRUE)),
aes(x = year, y = prop_A, color = Subject)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Trends in A Grade Proportion by Subject",
x = "Year", y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14)
ggplot(all_courses %>%
group_by(year, Department) %>%
summarise(prop_A = sum(A, na.rm=TRUE) / sum(Total, na.rm=TRUE)),
aes(x = year, y = prop_A, color = Department)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2.5) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Trends in A Grade Proportion by Department",
x = "Year", y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14)
ggplot(all_courses %>%
group_by(year, Department) %>%
summarise(prop_A = sum(A, na.rm = TRUE) / sum(Total, na.rm = TRUE)),
aes(x = year, y = prop_A, color = Department, group = Department)) +
geom_line(linewidth = 1.2, alpha = 0.8) +
geom_point(size = 2.2, alpha = 0.8) +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +
labs(
title = "Trends in A Grade Proportion by Department",
x = "Year",
y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",           # ðŸ‘ˆ hides legend
plot.title = element_text(face = "bold", hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(t = 20, r = 15, b = 15, l = 15)
)
dept_year <- all_courses %>%
group_by(Department, year) %>%
summarise(
total_A = sum(A, na.rm = TRUE),
total   = sum(Total, na.rm = TRUE),
prop_A  = total_A / total,
.groups = "drop"
)
# 2) Growth per department (from earliest to latest year available for that dept)
dept_growth <- dept_year %>%
filter(is.finite(prop_A)) %>%
group_by(Department) %>%
summarise(
start_year = min(year),
end_year   = max(year),
start_prop = prop_A[which.min(year)],
end_prop   = prop_A[which.max(year)],
growth     = end_prop - start_prop,
.groups    = "drop"
) %>%
arrange(desc(growth))
# 3) Pick top 5
top5_depts <- dept_growth %>%
slice_head(n = 5) %>%
pull(Department)
plot_data <- dept_year %>%
filter(Department %in% top5_depts)
# Points for labeling the lines at the last year
last_pts <- plot_data %>%
group_by(Department) %>%
filter(year == max(year)) %>%
ungroup()
# 4) Plot: trends for just the top 5 growth departments
ggplot(plot_data, aes(x = year, y = prop_A, color = Department, group = Department)) +
geom_line(linewidth = 1.3, alpha = 0.9) +
geom_point(size = 2.5, alpha = 0.9) +
# direct labels at the end of each line
geom_text(data = last_pts,
aes(label = Department),
hjust = -0.1, size = 3.8, fontface = "bold", show.legend = FALSE) +
scale_y_continuous(labels = scales::percent, limits = c(0, NA),
expand = expansion(mult = c(0.02, 0.12))) +
scale_x_continuous(breaks = sort(unique(plot_data$year)),
limits = c(min(plot_data$year), max(plot_data$year) + 0.6)) +
labs(
title = "Top 5 Departments by Growth in A-Grade Proportion",
subtitle = "Growth computed from each department's earliest to latest available year",
x = "Year",
y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",                 # hide legend
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(t = 20, r = 24, b = 16, l = 12)
)
# If you want to see the ranked table driving the plot:
dept_growth %>% slice_head(n = 5) %>%
mutate(across(c(start_prop, end_prop, growth), scales::percent_format(accuracy = 0.1)))
library(tidyverse)
# 1) Compute yearly A-grade proportions by department
dept_year <- all_courses %>%
group_by(Department, year) %>%
summarise(
total_A = sum(A, na.rm = TRUE),
total   = sum(Total, na.rm = TRUE),
prop_A  = total_A / total,
.groups = "drop"
)
# 2) Keep only departments that appear in *all years* (2016â€“2023)
complete_depts <- dept_year %>%
count(Department) %>%
filter(n == length(unique(all_courses$year))) %>%
pull(Department)
dept_year_complete <- dept_year %>%
filter(Department %in% complete_depts)
# 3) Calculate growth from first to last year
dept_growth <- dept_year_complete %>%
group_by(Department) %>%
summarise(
start_year = min(year),
end_year   = max(year),
start_prop = prop_A[year == start_year],
end_prop   = prop_A[year == end_year],
growth     = end_prop - start_prop,
.groups = "drop"
) %>%
arrange(desc(growth))
# 4) Select top 10 departments by growth
top10_depts <- dept_growth %>%
slice_head(n = 10) %>%
pull(Department)
plot_data <- dept_year_complete %>%
filter(Department %in% top10_depts)
# 5) Points for labeling at the last year
last_pts <- plot_data %>%
group_by(Department) %>%
filter(year == max(year)) %>%
ungroup()
# 6) Plot
ggplot(plot_data, aes(x = year, y = prop_A, color = Department, group = Department)) +
geom_line(linewidth = 1.3, alpha = 0.9) +
geom_point(size = 2.5, alpha = 0.9) +
# direct line-end labels
geom_text(data = last_pts,
aes(label = Department),
hjust = -0.1, size = 3.6, fontface = "bold", show.legend = FALSE) +
scale_y_continuous(labels = scales::percent, expand = expansion(mult = c(0.02, 0.12))) +
scale_x_continuous(breaks = sort(unique(plot_data$year)),
limits = c(min(plot_data$year), max(plot_data$year) + 0.6)) +
labs(
title = "Top 10 Departments by Growth in A-Grade Proportion (2016â€“2023)",
subtitle = "Only departments with data for all years included",
x = "Year",
y = "Proportion of A Grades"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(t = 20, r = 25, b = 15, l = 10)
)
# Optional: view the top 10 table
dept_growth %>%
slice_head(n = 10) %>%
mutate(across(c(start_prop, end_prop, growth), scales::percent_format(accuracy = 0.1)))
